Python provides two main types of loops and conditional statements: `if` statements and `while` and `for` loops. 

### Conditional Statements

The `if` statement in Python allows you to execute code only if a certain condition is met. The basic syntax is as follows:

```python
if condition:
    # code to execute if the condition is true
```

You can also include an `else` statement to execute code if the condition is false:

```python
if condition:
    # code to execute if the condition is true
else:
    # code to execute if the condition is false
```

And you can also chain multiple conditions together using `elif` statements:

```python
if condition1:
    # code to execute if condition1 is true
elif condition2:
    # code to execute if condition1 is false and condition2 is true
else:
    # code to execute if both condition1 and condition2 are false
```

### Loops

#### While Loop

A `while` loop in Python allows you to repeat a block of code while a certain condition is true. The basic syntax is as follows:

```python
while condition:
    # code to execute while the condition is true
```

The condition is checked at the beginning of each iteration, and the loop continues until the condition becomes false. You can use the `break` statement to exit the loop early or the `continue` statement to skip to the next iteration.

#### For Loop

A `for` loop in Python allows you to iterate over a sequence of elements. The basic syntax is as follows:

```python
for element in sequence:
    # code to execute for each element in the sequence
```

The loop iterates over each element in the sequence, and the `element` variable is assigned to the current element on each iteration. You can use the `break` statement to exit the loop early or the `continue` statement to skip to the next iteration.

In addition to iterating over sequences, you can also use the `range()` function to generate a sequence of numbers. The `range()` function takes three arguments: the start value (inclusive), the end value (exclusive), and the step size (default is 1). For example:

```python
for i in range(1, 11, 2):
    # code to execute for each odd number between 1 and 10
```

This will iterate over the odd numbers between 1 and 10: 1, 3, 5, 7, and 9.