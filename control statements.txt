Python, control statements are used to control the flow of execution of a program. There are three main types of control statements in Python: `break`, `continue`, and `pass`.

### Break

The `break` statement is used to exit a loop prematurely. When `break` is encountered inside a loop, the loop is terminated immediately, and program execution resumes at the next statement after the loop.

Here's an example:

```python
for i in range(1, 11):
    if i == 5:
        break
    print(i)
```

Output:

```
1
2
3
4
```

In this example, the loop iterates from 1 to 10, but when `i` equals 5, the `break` statement is executed, and the loop is terminated.

### Continue

The `continue` statement is used to skip the current iteration of a loop and move on to the next iteration. When `continue` is encountered inside a loop, the remaining statements in the loop for the current iteration are skipped, and the loop proceeds with the next iteration.

Here's an example:

```python
for i in range(1, 11):
    if i % 2 == 0:
        continue
    print(i)
```

Output:

```
1
3
5
7
9
```

In this example, the loop iterates from 1 to 10, but when `i` is even, the `continue` statement is executed, and the remaining statements in the loop for that iteration are skipped. The loop then proceeds with the next iteration.

### Pass

The `pass` statement is used as a placeholder when a statement is required syntactically but no code needs to be executed. It is often used as a placeholder for code that has not yet been written.

Here's an example:

```python
if x < 0:
    pass  # handle negative numbers later
else:
    print("x is positive")
```

In this example, the `pass` statement is used to indicate that code to handle negative numbers will be added later. If `x` is not negative, the code will proceed with the `print` statement.